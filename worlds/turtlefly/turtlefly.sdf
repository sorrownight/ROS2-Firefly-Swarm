<?xml version="1.0" ?>
<sdf version="1.5">
   <model name="turtlebot3_burger">  
      <link name="base">          
          <inertial>
              <pose>-0.032 0 0.070 0 0 0</pose>
              <inertia>
              <ixx>0.001</ixx>
              <ixy>0.000</ixy>
              <ixz>0.000</ixz>
              <iyy>0.001</iyy>
              <iyz>0.000</iyz>
              <izz>0.001</izz>
              </inertia>
              <mass>1.0</mass>
          </inertial>

          <collision name="base_collision">
              <pose>-0.032 0 0.070 0 0 0</pose>
              <geometry>
              <box>
                  <size>0.140 0.140 0.140</size>
              </box>
              </geometry>
          </collision>

          <visual name="base_visual">
              <pose>-0.032 0 0 0 0 0</pose>
              <geometry>
              <mesh>
                  <uri>meshes/burger_base.stl</uri>
                  <scale>.001 .001 .001</scale>
              </mesh>
              </geometry>
              <material>
                  <ambient>0.9 0.1 0 1</ambient>
                  <diffuse>0.9 0.1 0 1</diffuse>
                  <specular>0.9 0.2 0.2 1</specular>
                  <emissive>0 0 0</emissive>
              </material>
          </visual>

          <collision name="caster_collision">
              <pose>-0.081 0 -0.004 0 0 0</pose>
              <geometry>
              <sphere>
                  <radius>0.005000</radius>
              </sphere>
              </geometry>
              <surface>
              <friction>
                  <ode>
                  <mu>100000.0</mu>
                  <mu2>100000.0</mu2>
                  <fdir1>0 0 0</fdir1>
                  <slip1>0</slip1>
                  <slip2>0</slip2>
                  </ode>
              </friction>
              </surface>
          </collision>
      </link>

  <link name="lidar">
      <inertial>
      <pose>-0.020 0 0.161 0 0 0</pose>
      <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
      </inertia>
      <mass>0.125</mass>
      </inertial>

      <collision name="lidar_sensor_collision">
          <pose>-0.020 0 0.161 0 0 0</pose>
          <geometry>
          <cylinder>
              <radius>0.0508</radius>
              <length>0.055</length>
          </cylinder>
          </geometry>
      </collision>

      <visual name="lidar_sensor_visual">
          <pose>-0.032 0 0.171 0 0 0</pose>
          <geometry>
          <mesh>
              <uri>meshes/lds.stl</uri>
              <scale>0.001 0.001 0.001</scale>
          </mesh>
          </geometry>
          <material>
              <ambient>0.5 0.75 0 1</ambient>
              <diffuse>0.7 0.9 0 1</diffuse>
              <specular>0.2 0.2 0.2 1</specular>
              <emissive>0.1 0 0.1 1</emissive>
          </material>
      </visual>

      <sensor name="hls_lfcd_lds" type="gpu_ray">
          <always_on>1</always_on>
          <visualize>0</visualize>
          <pose>-0.032 0 0.171 0 0 0</pose>
          <update_rate>1800</update_rate>
          <ray>
          <scan>
              <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
              </horizontal>
          </scan>
          <range>
              <min>0.120000</min>
              <max>3.5</max>
              <resolution>0.015000</resolution>
          </range>
          <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
          </noise>
          </ray>
      </sensor>
      </link>

      <link name="camera_link">
          <pose relative_to="lidar">0 0 0.25 0 0 0</pose>
          <collision name="collision">
          <geometry>
              <box>
              <size>0.1 0.1 0.1</size>
              </box>
          </geometry>
          </collision>
          <visual name="visual">
          <geometry>
              <box>
              <size>0.01 0.01 0.01</size>
              </box>
          </geometry>
          </visual>
          <sensor name="wide_angle_camera1" type="wideanglecamera">
          <pose>0 0 0.25 -0.2 0 0</pose>
          <camera>
              <horizontal_fov>3.14</horizontal_fov>
              <image>
              <width>320</width>
              <height>240</height>
              </image>
              <clip>
              <near>0.1</near>
              <far>5</far>
              </clip>
              <!-- A new section named `lens`. -->
              <lens>
              <!-- type element is mandatory -->
              <type>custom</type>
              <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
              <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
              <custom_function>
                  <c1>1.05</c1>
                  <!-- linear scaling -->
                  <c2>4</c2>
                  <!-- angle scaling -->
                  <f>1.0</f>
                  <!-- one more scaling parameter -->
                  <fun>tan</fun>
                  <!-- one of sin,tan,id -->
              </custom_function>
              <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
              <!-- othervise it depends on lens type and custom function, if there is one -->
              <scale_to_hfov>false</scale_to_hfov>
              <!-- clip everything that is outside of this angle -->
              <cutoff_angle>3.1415</cutoff_angle>
              <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
              <env_texture_size>128</env_texture_size>
              </lens>
          </camera>
          <always_on>1</always_on>
          <update_rate>13</update_rate>
          </sensor>
          <sensor name="wide_angle_camera2" type="wideanglecamera">
          <pose>-0.105 0 0.25 -0.2 0 3.14</pose>
          <camera>
              <horizontal_fov>3.14</horizontal_fov>
              <image>
              <width>320</width>
              <height>240</height>
              </image>
              <clip>
              <near>0.1</near>
              <far>5</far>
              </clip>
              <!-- A new section named `lens`. -->
              <lens>
              <!-- type element is mandatory -->
              <type>custom</type>
              <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
              <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
              <custom_function>
                  <c1>1.05</c1>
                  <!-- linear scaling -->
                  <c2>4</c2>
                  <!-- angle scaling -->
                  <f>1.0</f>
                  <!-- one more scaling parameter -->
                  <fun>tan</fun>
                  <!-- one of sin,tan,id -->
              </custom_function>
              <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
              <!-- othervise it depends on lens type and custom function, if there is one -->
              <scale_to_hfov>false</scale_to_hfov>
              <!-- clip everything that is outside of this angle -->
              <cutoff_angle>3.1415</cutoff_angle>
              <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
              <env_texture_size>128</env_texture_size>
              </lens>
          </camera>
          <always_on>1</always_on>
          <update_rate>13</update_rate>
          </sensor>

          

      </link>
      

      <link name="left_wheel">

      <inertial>
          <pose>0 0.08 0.023 -1.57 0 0</pose>
          <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
          </inertia>
          <mass>0.1</mass>
      </inertial>

      <collision name="left_wheel_collision">
          <pose>0 0.08 0.023 -1.57 0 0</pose>
          <geometry>
          <cylinder>
              <radius>0.033</radius>
              <length>0.018</length>
          </cylinder>
          </geometry>
          <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
              <friction>
              <ode>
                  <mu>100000.0</mu>
                  <mu2>100000.0</mu2>
                  <fdir1>0 0 0</fdir1>
                  <slip1>0.0</slip1>
                  <slip2>0.0</slip2>
              </ode>
          </friction>
          </surface>
      </collision>

      <visual name="left_wheel_visual">
          <pose>0 0.08 0.023 0 0 0</pose>
          <geometry>
          <mesh>
              <uri>meshes/left_tire.stl</uri>
              <scale>0.001 0.001 0.001</scale>
          </mesh>
          </geometry>
          <material>
              <ambient>0.1 0.1 0.1 1</ambient>
              <diffuse>0.1 0.1 0.1 1</diffuse>
              <specular>0.1 0.1 0.1 1</specular>
              <emissive>0.1 0.1 0.1 1</emissive>
          </material>
      </visual>
      </link>

      <link name="right_wheel">

      <inertial>
          <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
          <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
          </inertia>
          <mass>0.1</mass>
      </inertial>
      
      <collision name="right_wheel_collision">
          <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
          <geometry>
          <cylinder>
              <radius>0.033</radius>
              <length>0.018</length>
          </cylinder>
          </geometry>
          <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
              <friction>
              <ode>
                  <mu>100000.0</mu>
                  <mu2>100000.0</mu2>
                  <fdir1>0 0 0</fdir1>
                  <slip1>0.0</slip1>
                  <slip2>0.0</slip2>
              </ode>
          </friction>
          </surface>
      </collision>

      <visual name="right_wheel_visual">
          <pose>0.0 -0.08 0.023 0 0 0</pose>
          <geometry>
          <mesh>
              <uri>meshes/right_tire.stl</uri>
              <scale>0.001 0.001 0.001</scale>
          </mesh>
          </geometry>
          <material>
              <ambient>0.1 0.1 0.1 1</ambient>
              <diffuse>0.1 0.1 0.1 1</diffuse>
              <specular>0.1 0.1 0.1 1</specular>
              <emissive>0.1 0.1 0.1 1</emissive>
          </material>
      </visual>
      </link>

      <joint name="left_wheel_joint" type="revolute">
      <parent>base</parent>
      <child>left_wheel</child>
      <pose>0.0 0.08 0.023 -1.57 0 0</pose>
      <axis>
          <xyz>0 0 1</xyz>
      </axis>
      </joint>

      <joint name="right_wheel_joint" type="revolute">
      <parent>base</parent>
      <child>right_wheel</child>
      <pose>0.0 -0.08 0.023 -1.57 0 0</pose>
      <axis>
          <xyz>0 0 1</xyz>
      </axis>
      </joint>

      <joint name="lidar_joint" type="fixed">
      <parent>base</parent>
      <child>lidar</child>
      <pose>-0.032 0 0.171 0 0 0</pose>
      <axis>
          <xyz>0 0 1</xyz>
          <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
      </joint>

      <joint name='camera_joint' type='fixed'>
      <parent>base</parent>
      <child>camera_link</child>
      <pose>-0.032 0 0.271 0 0 0</pose>
      <axis>
          <xyz>0 0 1</xyz>
          <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
          </limit>
      </axis>
      </joint>

      

      <!-- DIFF DRIVE PLUGIN / WHEELS CONTROLER -->
      <plugin
          filename="gz-sim-diff-drive-system"
          name="gz::sim::systems::DiffDrive">
          <left_joint>left_wheel_joint</left_joint>
          <right_joint>right_wheel_joint</right_joint>
          <wheel_separation>0.6851</wheel_separation>
          <wheel_radius>0.1651</wheel_radius>
          <odom_publish_frequency>10</odom_publish_frequency>
      </plugin>

      <plugin name="FireflyLED" filename="libFireflyLED.so">
          <model_name>turtle</model_name>
          <link_name>base</link_name>
          <visual_name>base_visual</visual_name>
      </plugin>
          
      <static>false</static>
      <allow_auto_disable>false</allow_auto_disable>
  </model>
</sdf>
